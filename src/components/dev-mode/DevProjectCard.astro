---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const { name, description, site, repository, technologies, imagePath } =
    Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/dev-mode/*.{jpeg,jpg,png,gif}",
);
if (!images[imagePath])
    throw new Error(
        `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`,
    );
---

<article
    class="flex flex-col relative hover:z-10 hover:-translate-y-4 transition-all items-center"
>
    <div class="absolute top-16 flex flex-col h-[74%] w-[87%]">
        <div class="bg-zinc-100 h-56 relative overflow-hidden">
            <Image
                src={images[imagePath]()}
                alt="holi"
                class="w-[80%] object-cover relative top-4 object-top mx-auto rounded-lg shadow-2xl"
            />
        </div>
        <div class="py-4 flex flex-col flex-grow">
            <div class="gap-6 flex flex-col flex-grow">
                <div class="gap-3 flex flex-col">
                    <h2 class="font-heading font-bold text-2xl">{name}</h2>
                    <p>{description}</p>
                </div>
                <div class="flex gap-2 flex-wrap w-full">
                    {
                        technologies.map((techonology) => {
                            return (
                                <div>
                                    <span class="rounded-xl px-2 py-1 bg-slate-100 text-slate-500">
                                        {techonology}
                                    </span>
                                </div>
                            );
                        })
                    }
                </div>
            </div>
            <div class="flex gap-1">
                {
                    site && (
                        <a
                            title="Live site"
                            class="rounded-md px-2 py-1 flex justify-center text-blue-500 hover:text-blue-600"
                            href={site}
                            target="_blank"
                        >
                            <span class="material-symbols-outlined">
                                language
                            </span>
                            <span>Live site</span>
                        </a>
                    )
                }
                {
                    repository && (
                        <a
                            title="Code repository"
                            class="font-bold text-blue-500 hover:text-blue-600 flex justify-center"
                            href={repository}
                            target="_blank"
                        >
                            <span class="material-symbols-outlined">code</span>
                            <span>Code base</span>
                        </a>
                    )
                }
            </div>
        </div>
    </div>
    <svg
        width="366"
        height="512"
        viewBox="0 0 366 512"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        class="-z-10 max-w-72 h-auto md:max-w-auto"
    >
        <path
            d="M325.927 498.024L325.926 498.024C299.452 501.931 251.788 507 182.755 507C113.721 507 66.1248 501.939 39.639 498.032L39.6386 498.032C26.3912 496.08 16.0718 485.529 14.4334 472.246C10.447 439.904 4.77031 373.26 4.77031 255.886C4.77032 138.512 10.4812 71.4123 14.4712 39.1924L14.4713 39.1919C16.1096 25.9492 26.3697 15.4256 39.5727 13.4202C64.9472 9.573 110.98 4.76994 182.751 4.76994C254.523 4.76994 300.628 9.57698 325.986 13.4278L325.986 13.4278C339.174 15.4302 349.432 25.9316 351.08 39.1546L351.08 39.1548C355.066 71.1204 360.731 137.398 360.731 255.886C360.731 324.977 354.172 447.542 351.229 473.209C349.345 486.459 339.314 496.052 325.927 498.024Z"
            fill="white"
            stroke="black"
            stroke-width="9.5399"></path>
    </svg>
</article>

<style>
    .hover {
        rotate: 0deg !important;
    }

    .stroke {
        -webkit-text-stroke: 10px black;
    }
    @media (prefers-color-scheme: dark) {
        .stroke {
            filter: invert();
        }
    }
</style>

<script>
    const article = document.querySelectorAll("article");
    function getRandomDegs() {
        const deg = Math.random() * 10;
        const extendedRange = deg - 5;
        return extendedRange.toFixed(2) + "deg";
    }

    article.forEach((article) => {
        article.style.rotate = getRandomDegs();
        article.addEventListener("mouseenter", () => {
            article.classList.add("hover");
        });
        article.addEventListener("mouseleave", () => {
            article.classList.remove("hover");
        });
    });
</script>
