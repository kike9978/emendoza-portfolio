---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const { number, title, link = "/", imagePath } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/studies/*.{jpeg,jpg,png,gif}",
);
if (!images[imagePath])
    throw new Error(
        `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`,
    );

const deg = Math.random() * 100;
const rounded = deg.toFixed(2);
---

<article class=`relative transition-all`>
    <a href={link} class="flex justify-end flex-col h-full">
        <Image src={images[imagePath]()} alt="hola" />
        <div
            class="w-full h-full absolute flex flex-col justify-end p-7 items-center"
        >
            <div class="absolute top-6 left-6 text-6xl font-heading font-bold">
                {number}
            </div>
            {
                title
                    .split(" ")
                    .map((word) => (
                        <h2 class="bg-black text-white font-heading tracking-[-0.07rem] text-4xl font-bold w-fit leading-[.80em] text-center">
                            {word}
                        </h2>
                    ))
            }
        </div>
    </a>
</article>
<style>
    .hover {
        rotate: 0deg !important;
    }
</style>

<script>
    const articles = document.querySelectorAll("article");
    function getRandomDegs() {
        const deg = Math.random() * 12;
        const extendedRange = deg - 6;
        return extendedRange.toFixed(2) + "deg";
    }

    articles.forEach((article) => {
        article.style.rotate = getRandomDegs();
        article.addEventListener("mouseenter", () => {
            article.classList.add("hover");
        });
        article.addEventListener("mouseleave", () => {
            article.classList.remove("hover");
        });
    });
</script>
